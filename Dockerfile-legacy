FROM behance/docker-nginx:6.1
MAINTAINER Bryan Latten <latten@adobe.com>

# Set TERM to suppress warning messages.
ENV CONF_PHPFPM=/etc/php/5.6/fpm/php-fpm.conf \
    CONF_PHPMODS=/etc/php/5.6/mods-available \
    CONF_FPMPOOL=/etc/php/5.6/fpm/pool.d/www.conf \
    CONF_FPMOVERRIDES=/etc/php/5.6/fpm/conf.d/overrides.user.ini \
    APP_ROOT=/app \
    PHP_FPM_MAX_CHILDREN=4096 \
    PHP_FPM_START_SERVERS=20 \
    PHP_FPM_MAX_REQUESTS=1024 \
    PHP_FPM_MIN_SPARE_SERVERS=5 \
    PHP_FPM_MAX_SPARE_SERVERS=128 \
    PHP_FPM_MEMORY_LIMIT=256M \
    PHP_FPM_MAX_EXECUTION_TIME=60 \
    PHP_FPM_UPLOAD_MAX_FILESIZE=1M \
    NEWRELIC_VERSION=6.7.0.174 \
    CFG_APP_DEBUG=1 \
    CONF_FPM_LIMIT_FILES=40000 \
    CONF_FPM_LIMIT_CORE=unlimited

# Ensure cleanup script is available for the next command
ADD ./container/root/clean.sh /clean.sh

# Ensure the latest base packages are up to date (don't require a parent rebuild)
RUN apt-get update -q && \
    apt-get upgrade -yqq && \
    apt-get install -yqq \
        git \
        curl \
        wget \
        software-properties-common \
    && \
    locale-gen en_US.UTF-8 && export LANG=en_US.UTF-8 && \
    add-apt-repository ppa:git-core/ppa -y && \
    add-apt-repository ppa:ondrej/php -y && \
    echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list && \
    wget -O- https://download.newrelic.com/548C16BF.gpg | apt-key add - && \
    # Prevent newrelic install from prompting for input \
    echo newrelic-php5 newrelic-php5/application-name string "REPLACE_NEWRELIC_APP" | debconf-set-selections && \
    echo newrelic-php5 newrelic-php5/license-key string "REPLACE_NEWRELIC_LICENSE" | debconf-set-selections && \
    # Perform cleanup \
    apt-get remove --purge -yq \
        patch \
        software-properties-common \
        wget \
    && \
    /clean.sh

# Add PHP and support packages \
RUN apt-get update -q && \
    # Ensure PHP 5.5 + 7.0 + 7.1 don't accidentally get added by PPA
    apt-mark hold \
            php5.5-cli \
            php5.5-common \
            php5.5-json \
            php7.0-cli \
            php7.0-common \
            php7.0-json \
            php7.1-cli \
            php7.1-common \
    && \
    apt-get -yqq install \
        php5.6 \
        php5.6-apcu \
        php5.6-bz2 \
        php5.6-curl \
        php5.6-dev \
        php5.6-fpm \
        php5.6-gd \
        php5.6-igbinary \
        php5.6-intl \
        php5.6-json \
        php5.6-mbstring \
        php5.6-mcrypt \
        php5.6-mysql \
        php5.6-pgsql \
        php5.6-gearman \
        php5.6-memcache \
        php5.6-memcached \
        php5.6-xdebug \
        php5.6-xml \
        php5.6-zip \
        newrelic-php5=${NEWRELIC_VERSION} \
        newrelic-php5-common=${NEWRELIC_VERSION} \
        newrelic-daemon=${NEWRELIC_VERSION} \
        libyaml-dev \
    && \
    phpdismod pdo_pgsql && \
    phpdismod pgsql && \
    phpdismod xdebug && \
    curl -sS https://getcomposer.org/installer | php && \
    mv composer.phar /usr/local/bin/composer

    # Install new PHP5-stable version of Yaml \
RUN pecl install yaml-1.3.0 && \
    echo "extension=yaml.so" > $CONF_PHPMODS/yaml.ini && \
    # Install new PHP5-stable version of Redis \
    pecl install redis-2.2.8 && \
    echo "extension=redis.so" > $CONF_PHPMODS/redis.ini && \
    # Remove dev packages that were only in place just to compile extensions
    apt-get remove -yqq \
        php5.6-dev \
    && \
    /clean.sh

# - Configure php-fpm to use TCP rather than unix socket (for stability), fastcgi_pass is also set by /etc/nginx/sites-available/default
# - Set base directory for all php (/app), difficult to use APP_PATH as a replacement, otherwise / breaks command
# - Baseline "optimizations" before benchmarking succeeded at concurrency of 150
# @see http://www.codestance.com/tutorials-archive/install-and-configure-php-fpm-on-nginx-385
# - Ensure environment variables aren't cleaned, will make it into FPM  workers
# - php-fpm processes must pick up stdout/stderr from workers, will cause minor performance decrease (but is required)
# - Disable systemd integration, it is not present nor responsible for running service
# - Enforce ACL that only 127.0.0.1 may connect
# - Allow FPM to pick up extra configuration in fpm/conf.d folder

# Overlay the root filesystem from this repo
COPY ./container/root /

# Make additional hacks to migrate files/config from 7.0 --> 5.6 folder
RUN cp /etc/php/7.0/mods-available/* $CONF_PHPMODS && \
    cp /etc/php/7.0/fpm/conf.d/overrides.user.ini $CONF_FPMOVERRIDES && \
    # Hack: share startup scripts with php 7.0 version by symlinking \
    ln -s /usr/sbin/php-fpm5.6 /usr/sbin/php-fpm7.0 && \
    # Override default ini values for both CLI + FPM \
    phpenmod overrides && \
    # Set nginx to listen on defined port \
    sed -i "s/listen [0-9]*;/listen ${CONTAINER_PORT};/" $CONF_NGINX_SITE && \
    # Enable NewRelic via Ubuntu symlinks, but disable in file. Cross-variant startup script uncomments with env vars.
    phpenmod newrelic && \
    sed -i 's/extension\s\?=/;extension =/' $CONF_PHPMODS/newrelic.ini && \
    # Enable status page at "/__status"
    sed -i 's/;pm.status_path = .*/pm.status_path = \/__status/' $CONF_FPMPOOL

RUN sed -i "s/listen = .*/listen = 127.0.0.1:9000/" $CONF_FPMPOOL && \
    sed -i "s/;chdir = .*/chdir = \/app/" $CONF_FPMPOOL && \
    sed -i "s/pm.max_children = .*/pm.max_children = \${PHP_FPM_MAX_CHILDREN}/" $CONF_FPMPOOL && \
    sed -i "s/pm.start_servers = .*/pm.start_servers = \${PHP_FPM_START_SERVERS}/" $CONF_FPMPOOL && \
    sed -i "s/;pm.max_requests = .*/pm.max_requests = \${PHP_FPM_MAX_REQUESTS}/" $CONF_FPMPOOL && \
    sed -i "s/pm.min_spare_servers = .*/pm.min_spare_servers = \${PHP_FPM_MIN_SPARE_SERVERS}/" $CONF_FPMPOOL && \
    sed -i "s/pm.max_spare_servers = .*/pm.max_spare_servers = \${PHP_FPM_MAX_SPARE_SERVERS}/" $CONF_FPMPOOL && \
    sed -i "s/;clear_env/clear_env/" $CONF_FPMPOOL && \
    sed -i "s/;catch_workers_output/catch_workers_output/" $CONF_FPMPOOL && \
    sed -i "s/error_log = .*/error_log = \/dev\/stdout/" $CONF_PHPFPM && \
    sed -i "s/;listen.allowed_clients/listen.allowed_clients/" $CONF_PHPFPM && \
    # Since PHP-FPM will be run without root privileges, comment these lines to prevent any startup warnings \
    sed -i "s/^user =/;user =/" $CONF_FPMPOOL && \
    sed -i "s/^group =/;group =/" $CONF_FPMPOOL && \
    # Allow NewRelic to be partially configured by environment variables, set sane defaults \
    sed -i "s/newrelic.appname = .*/newrelic.appname = \"\${REPLACE_NEWRELIC_APP}\"/" $CONF_PHPMODS/newrelic.ini && \
    sed -i "s/newrelic.license = .*/newrelic.license = \"\${REPLACE_NEWRELIC_LICENSE}\"/" $CONF_PHPMODS/newrelic.ini && \
    sed -i "s/newrelic.logfile = .*/newrelic.logfile = \"\/dev\/stdout\"/" $CONF_PHPMODS/newrelic.ini && \
    sed -i "s/newrelic.daemon.logfile = .*/newrelic.daemon.logfile = \"\/dev\/stdout\"/" $CONF_PHPMODS/newrelic.ini && \
    sed -i "s/;newrelic.loglevel = .*/newrelic.loglevel = \"warning\"/" $CONF_PHPMODS/newrelic.ini && \
    sed -i "s/;newrelic.daemon.loglevel = .*/newrelic.daemon.loglevel = \"warning\"/" $CONF_PHPMODS/newrelic.ini && \
    # Match FPM timeout directive with .ini max execution time
    sed -i "s/;*request_terminate_timeout = .*/request_terminate_timeout = \${PHP_FPM_MAX_EXECUTION_TIME}/" $CONF_FPMPOOL && \
    # Required for php-fpm to place .sock file into, fails otherwise \
    mkdir /var/run/php/ && \
    chown -R $NOT_ROOT_USER:$NOT_ROOT_USER /var/run/php /var/run/lock /var/log/newrelic

RUN goss -g /tests/php-fpm/legacy.goss.yaml validate && \
    /aufs_hack.sh
