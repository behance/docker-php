name: ci

on:
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant:
          - "7.4"
          - "7.4-alpine"
          - "8.0"
          - "8.1"
        platform:
        - linux/amd64
        - linux/arm64
        exclude:
          # TODO: enable with compile cache
          - platform: linux/arm64
    env:
      TEST_MATCH: PHP Version ${{ matrix.variant }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Install goss
        run: |
          curl -L https://github.com/aelsabbahy/goss/releases/download/v0.3.9/goss-linux-amd64 -o /usr/local/bin/goss
          curl -L https://raw.githubusercontent.com/aelsabbahy/goss/master/extras/dgoss/dgoss -o /usr/local/bin/dgoss
          chmod +rx /usr/local/bin/goss
          chmod +rx /usr/local/bin/dgoss
      -
        name: Detect host configuration
        run: |
          TARGET_HOST=
          if [[ -n "$ACT" ]]; then
            echo "Local execution detected"
            TARGET_HOST="host.docker.internal"
          else
            TARGET_HOST="localhost"
          fi;

          echo "TARGET_HOST=${TARGET_HOST}" >> $GITHUB_ENV
      -
        # Build and execute in multiple configurations: vanilla, with env overrides, with TLS enabled
        name: Build and test
        run: |
          # NOTE: docker qemu and buildx setup actions create a black hole for build cache layers, avoid unless pushing externally
          # Setup multi-arch platforms, noop if already installed for builder
          docker run --privileged --rm tonistiigi/binfmt --install arm64,amd64

          TARGET_PLATFORM=${{ matrix.platform }}
          PHP_VARIANT=${{ matrix.variant }}
          PLATFORM=${TARGET_PLATFORM} PHP_VARIANT=${PHP_VARIANT} ./test.sh $TARGET_HOST
